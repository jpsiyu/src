%%%------------------------------------
%%% @Module  : task_daily
%%% @Author  : xyao
%%% @Email   : jiexiaowen@gmail.com
%%% @Created : 2011.06.14
%%% @Description: 每日计时器和日常任务
%%%------------------------------------
-module(timer_daily).
-export([init/0, handle/1, terminate/2]).

%%=========================================================================
%% 一些定义
%% TODO: 定义模块状态。
%%=========================================================================

%%=========================================================================
%% 回调接口
%% TODO: 实现回调接口。
%%=========================================================================

%% -----------------------------------------------------------------
%% @desc     启动回调函数，用来初始化资源。
%% @param
%% @return  {ok, State}     : 启动正常
%%           {ignore, Reason}: 启动异常，本模块将被忽略不执行
%%           {stop, Reason}  : 启动异常，需要停止所有后台定时模块
%% -----------------------------------------------------------------
init() ->
    {ok, ?MODULE}.

%% -----------------------------------------------------------------
%% @desc     服务回调函数，用来执行业务操作。
%% @param    State          : 初始化或者上一次服务返回的状态
%% @return   {ok, NewState}  : 服务正常，返回新状态
%%           {ignore, Reason}: 服务异常，本模块以后将被忽略不执行，模块的terminate函数将被回调
%%           {stop, Reason}  : 服务异常，需要停止所有后台定时模块，所有模块的terminate函数将被回调
%% -----------------------------------------------------------------
handle(State) ->
    mod_daily:daily_clear(),
	mod_daily_dict:daily_clear(),
    mod_qixi:reset_player_task(),	
	mod_chat_forbid:clear(),
	lib_anti_brush:guild_anti_brush_clear(),
	%% 发送剧情副本霸主奖励 -- 公共服务器.
	lib_story_master:send_story_master_reward(),
    %% 每日清除准备副本霸主和发送奖励
    lib_equip_master:clean_equip_master(),
	%%每日需要处理的帮派事务(延迟3小时)
	spawn(fun() ->
				  util:rand(1, 10),
				  util:sleep(3 * 60 * 60 * 1000),
				  mod_guild:daily_work() 
		  end),
	%% 限时名人堂（活动）
	spawn(fun() -> mod_fame_limit:clear_data() end),
	%% 名人堂投票结果
%% 	spawn(fun() -> lib_fame_merge:do_vote() end),

    {ok, State}.

%% -----------------------------------------------------------------
%% @desc     停止回调函数，用来销毁资源。
%% @param    Reason        : 停止原因
%% @param    State         : 初始化或者上一次服务返回的状态
%% @return   ok
%% -----------------------------------------------------------------
terminate(_Reason, _State) ->
    ok.

%%=========================================================================
%% 业务处理
%% TODO: 实现业务处理。
%%=========================================================================


