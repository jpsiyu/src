%%%--------------------------------------
%%% @Module  : data_fish
%%% @Author  : calvin
%%% @Email   : calvinzhong888@gmail.com
%%% @Created : 2012.9.17
%%% @Description: 全民垂钓
%%%--------------------------------------

-module(data_fish).
-include("fish.hrl").
-compile(export_all).

%% 活动时间：周一、三、五、日
require_activity_week() -> [1, 3, 5, 7].

%% 活动时间：13:00 ~ 14:00
require_activity_time() -> [{13, 0}, {14, 0}].

%% 玩家进入等级要求
require_lv() -> 40.

%% 房间人数上限
get_room_limit() -> 100.

%% 人数达到多少开下一个房间
get_create_room_limit() -> 90.

%% 房间上限，目前为10个房间
get_room_num_limit() -> 10.

%% 定时器广播时间间隔
timer_refresh_time() -> 60.

%% 取得场景id
get_sceneid() -> 451.

%% 取得进入场景坐标
get_enter_xy() ->
	List = [{52,100}, {12,61}, {71,41}],
	util:list_rand(List).

%% 直接离开游戏后出现的坐标
get_outer_scene() -> 
	%{102, 113, 124}.
	{102, 103, 122}.

%% 队员人员上限
get_member_num() -> 3.

%% 偷鱼次数
get_stealing_num() -> 5.

%% 偷鱼读条时间
get_steal_cd() -> 5.

%% 获得积分上限
get_score_limitup() -> 1000.

%% 鱼对应的积分
get_fish_score_by_id(10041) -> 100;
get_fish_score_by_id(10042) -> 50;
get_fish_score_by_id(10043) -> 30;
get_fish_score_by_id(10044) -> 25;
get_fish_score_by_id(10045) -> 20;
get_fish_score_by_id(10046) -> 10.

%% 取得概率和对应的鱼
%% 格式：{开始概率，结束概率，鱼id}
get_rate_and_fish() ->
	[
		{1, 7, 10041},
		{8, 14, 10042},
		{15, 19, 10043},
		{20, 24, 10044},
		{25, 30, 10045},
		{31, 100, 10046}
	].

%% 阶段奖励需要的鱼的数量
%% 格式：{[积分最大鱼的数量, 积分第二的鱼的数量, ...], 第几等奖}
get_step_award_data() ->
	[
		{[1, 2, 5, 10, 15, 30], 1},
        {[0, 1, 2, 8, 8, 25], 2},
        {[0, 0, 1, 2, 6, 20], 3},
        {[0, 0, 0, 1, 4, 15], 4}
	].

%% 第几等奖对应的物品及数量
%% 格式：[物品id, 物品数量]
get_step_award(1) -> [522001, 4];
get_step_award(2) -> [522001, 3];
get_step_award(3) -> [522001, 2];
get_step_award(4) -> [522001, 1];
get_step_award(_) -> [].

%% 获取翻牌奖励
%% 格式如：[开始概率，结束概率，物品id，物品数量，绑定]
get_score_award() ->
	[
		[1, 10, 522001, 2, 0],
		[11, 25, 522001, 1, 0],
		[26, 40, 522001, 3, 2],
		[41, 65, 522001, 2, 2],
		[66, 100, 522001, 1, 2]
	].

%% 计算经验
get_exp(LV, Score) ->
	round(LV * LV * Score * 0.75).

%% 计算历练声望
get_llpt(LV, Score) ->
	round((100 - math:pow((10 - LV * 0.1), 2)) *  0.05 * Score).

%% 队友共享积分比例
team_share_rate() -> 1.2.

%% 获取boss刷新时间
get_refresh_boss_time(?FISH_ID_1) -> 600;
get_refresh_boss_time(?FISH_ID_2) -> 300;
get_refresh_boss_time(_) -> 600.

%% 获得怪物刷新坐标
get_boss_position(_MonId) ->
	List = get_refresh_boss_position(),
	util:list_rand(List).

%% 初始时boss的出现数量
get_refresh_boss_num(?FISH_ID_1) -> 5;
get_refresh_boss_num(?FISH_ID_2) -> 10;
get_refresh_boss_num(_) -> 0.

%% 普通怪生成坐标
%% {怪物id, X坐标，Y坐标}
get_mon_position() ->
    [{10043, 59, 68} ,{10044, 59, 14} ,{10045, 26, 104} ,{10046, 23, 103} ,{10045, 62, 64} ,{10045, 62, 22} ,{10046, 18, 107} ,{10046, 53, 45} ,{10045, 54, 19} ,{10043, 4, 41} ,{10044, 54, 26} ,{10046, 56, 51} ,{10046, 49, 83} ,{10045, 48, 89} ,{10043, 8, 29} ,{10043, 61, 85} ,{10046, 59, 61} ,{10044, 44, 55} ,{10045, 37, 65} ,{10045, 54, 88} ,{10046, 50, 55} ,{10043, 32, 73} ,{10043, 67, 70} ,{10043, 20, 103} ,{10044, 59, 22} ,{10043, 2, 44} ,{10045, 41, 76} ,{10044, 13, 108} ,{10045, 61, 72} ,{10045, 40, 59} ,{10043, 38, 78} ,{10044, 44, 83} ,{10043, 49, 78} ,{10044, 17, 99} ,{10045, 53, 53} ,{10044, 35, 79} ,{10044, 64, 12} ,{10045, 36, 54} ,{10044, 31, 26} ,{10046, 38, 45} ,{10046, 61, 30} ,{10046, 65, 68} ,{10046, 69, 22} ,{10043, 47, 55} ,{10045, 58, 86} ,{10043, 7, 34} ,{10043, 50, 47} ,{10045, 40, 69} ,{10044, 3, 44} ,{10043, 39, 54} ,{10045, 52, 82} ,{10046, 46, 78} ,{10045, 45, 89} ,{10045, 63, 16} ,{10044, 71, 23} ,{10045, 40, 83} ,{10043, 7, 44} ,{10045, 59, 81} ,{10044, 53, 15} ,{10046, 43, 78} ,{10046, 69, 68} ,{10044, 36, 72} ,{10043, 34, 61} ,{10044, 11, 43} ,{10044, 12, 35} ,{10044, 36, 50} ,{10044, 28, 28} ,{10046, 47, 49} ,{10044, 12, 17} ,{10046, 41, 71} ,{10043, 46, 81} ,{10043, 51, 89} ,{10044, 13, 102} ,{10045, 69, 75} ,{10043, 57, 67} ,{10044, 39, 62} ,{10046, 56, 83} ,{10044, 28, 19} ,{10046, 57, 71} ,{10046, 16, 112} ,{10044, 56, 14} ,{10044, 58, 29} ,{10044, 66, 22} ,{10046, 41, 50} ,{10043, 16, 104}].

%% 获取boss刷出来的坐标
get_refresh_boss_position() ->
    [{36,81},{40,84},{36,73},{31,68},{33,61},{37,60},{38,55},{36,46},{72,24},{66,19},{63,13},{60,14},{54,16},{54,22},{51,24},{55,26},{60,30},{63,23},{53,46},{55,48},{58,51},{60,60},{65,64},{68,71},{69,74},{39,53},{43,51},{49,47},{55,58},{57,67},{61,73},{61,52},{38,46},{38,56},{21,100},{27,103},{21,111},{15,114},{11,103},{16,107},{10,35},{8,29},{12,18},{26,21},{31,26},{46,6}].
